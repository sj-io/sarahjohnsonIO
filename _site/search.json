[
  {
    "objectID": "ref.html",
    "href": "ref.html",
    "title": "Reference",
    "section": "",
    "text": "A collection of useful pages for housing research."
  },
  {
    "objectID": "ref.html#census",
    "href": "ref.html#census",
    "title": "Reference",
    "section": "Census",
    "text": "Census\n\n\n\n\n\n\n\n\n\n\nACS Variables\n\n\n10 min\n\n\nAn overview of Census ACS variables, particularly related to housing.\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeographic Boundaries\n\n\n11 min\n\n\nMapping all available Census boundaries for one area.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSurveys & Programs\n\n\n7 min\n\n\nComparing Census surveys related to housing and population.\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "ref.html#law",
    "href": "ref.html#law",
    "title": "Reference",
    "section": "Law",
    "text": "Law\n\n\n\n\n\n\n\n\n\n\nNPA\n\n\n20 min\n\n\nFull text of Tennessee’s Neighborhood Preservation Act, which regulates control of neglected houses.\n\n\n\n\n\n\n\n\n\n\n\n\n\nU.S. Housing Acts\n\n\n41 min\n\n\nA (mostly) comprehensive list of federal housing legislation, in chronological order.\n\n\n\n\n\n\n\n\n\n\n\n\n\nURLTA\n\n\n55 min\n\n\nFull text of Tennessee’s Uniform Residential Landlord Tenant Act, which regulates rental housing in TN.\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "census/boundaries.html",
    "href": "census/boundaries.html",
    "title": "Geographic Boundaries",
    "section": "",
    "text": "Below is an interactive map of 2021 TIGRIS boundaries related to the Memphis area. Layers will stack in the order they are selected."
  },
  {
    "objectID": "census/boundaries.html#using-tigris-and-sf",
    "href": "census/boundaries.html#using-tigris-and-sf",
    "title": "Geographic Boundaries",
    "section": "Using tigris and sf",
    "text": "Using tigris and sf\nBoundaries were pulled using the tigris package. A full list of available datasets and their corresponding functions is available in Chapter 5 of the book Analyzing US Census Data.\nThe Memphis Metro area covers three states, meaning sometimes I needed to run the same function three times for Tennessee, Arkansas, and Mississippi. I used purrr’s map_dfr() to do this automatically. Boundaries were then filtered in one of two ways, either using dplyr’s filter() function for table data or sf’s st_filter() to filter one geometry by another.\nIn summary, these are the packages I used to get started (I also recommend caching your datasets, but it’s optional).\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tigris)\noptions(tigris_use_cache = TRUE)\noptions(tigris_year = 2021) # currently defaults to 2020\n\nBelow is a full list of how I gathered boundaries related to Memphis, grouped by how they’re filtered.\n\n#' Broad regions, filtered by known NAME/DIVISIONs relevant to Memphis Area\nnation &lt;- nation()\nregions &lt;- regions() %&gt;% filter(NAME == \"South\")\ndivisions &lt;- divisions() %&gt;% filter(str_detect(NAME, \"South Central\"))\nstates &lt;- states() %&gt;% filter(DIVISION %in% c(6, 7))\n\n# The Memphis MSA include Tennessee, Mississippi, & Arkansas\nmemST &lt;- list(\"TN\", \"MS\", \"AR\")\n\n#' Metro and Urban areas, filtered by \"Memphis\"\ncsa &lt;- combined_statistical_areas() %&gt;% filter(str_detect(NAME, \"Memphis\")) \ncbsa &lt;- core_based_statistical_areas() %&gt;% \n  filter(str_detect(NAME, \"Memphis\")) \nurb &lt;- urban_areas() %&gt;% filter(str_detect(NAME10, \"Memphis\"))\n\n#' Areas in Metro or Urban area\ncsaCounties &lt;- map_dfr((memST), ~{counties(.x)}) %&gt;% \n  st_filter(csa, .predicate = st_within)\n\ncounties &lt;- csaCounties[cbsa, op = st_within]\n\nplaces &lt;- map_dfr((memST), ~{places(.x)}) %&gt;% \n  st_filter(cbsa, .predicate = st_within)\n\nsld &lt;- state_legislative_districts(\"TN\") %&gt;% \n  st_filter(cbsa, .predicate = st_within)\n\nzcta &lt;- zctas(cb = TRUE, starts_with = c(\"38\", \"72\")) %&gt;% st_filter(urb)\npuma &lt;- map_dfr((memST), ~{pumas(.x)}) %&gt;% st_filter(urb)\n\n\n#' Shelby County and Memphis\nshelby &lt;- counties %&gt;% filter(NAME == \"Shelby\")\nmemphis &lt;- places %&gt;% filter(NAME == \"Memphis\")\n\n#' Areas within Shelby County\nschool &lt;- school_districts(\"TN\") %&gt;% \n  st_filter(shelby, .predicate = st_within)\n\ncong &lt;- congressional_districts(\"TN\") %&gt;% \n  st_filter(shelby, .predicate = st_within)\n# cong2 &lt;- congressional_districts(\"TN\") %&gt;% \n#   st_filter(shelby)\n# includes the very large district 8\n\nvote &lt;- voting_districts(\"TN\", \"Shelby\")\ncsd &lt;- county_subdivisions(\"TN\", \"Shelby\")\ntracts &lt;- tracts(\"TN\", \"Shelby\")\nblkgrp &lt;- block_groups(\"TN\", \"Shelby\")\n\nThe above code may look like a lot, but running it will quickly pull from 18 datasets and automatically filter for the Memphis area. Of course, unless you’re also trying to map all the boundaries at once, there’s no reason to do this. Instead, the above code chunk is meant to be used as a reference, to quickly copy and paste whichever specific boundary is needed.\nThe final map was created using leaflet. The website and package documentation were useful when I got stuck."
  },
  {
    "objectID": "census/boundaries.html#footnotes",
    "href": "census/boundaries.html#footnotes",
    "title": "Geographic Boundaries",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe Census also alters some data to hide personally identifying info. For instance, if someone is the only person of a certain race in a block, the Census may swap that person’s info to another block within the block group to protect their identity. According to the Census, these adjustments should not significantly impact data analysis. For more information, see that Census’s page on statistical safeguards.↩︎\nUntil the API is complete, PUMAs data is available for download from https://www.ipums.org/.↩︎"
  },
  {
    "objectID": "census/variables.html",
    "href": "census/variables.html",
    "title": "ACS Variables",
    "section": "",
    "text": "The R tidycensus package is an amazingly simple way to access Census data.1 When you use the package to call Census data, you need to know the variable code for the table or piece of data you’re trying to find. The load_variables() function allows you to quickly see all variables released in a given year by a survey or program. Census data is well organized and mostly consistent across years.2 This page is meant to help sort through the tens of thousands of variables to find the information you need."
  },
  {
    "objectID": "census/variables.html#r",
    "href": "census/variables.html#r",
    "title": "ACS Variables",
    "section": "R",
    "text": "R\nFirst, load the tidyverse and tidycensus packages.\n\nlibrary(tidyverse)\nlibrary(tidycensus)\n\nUse the load_variables() function to get Census variables.\n\n# ACS1 data is available from 2005-2022, excluding 2020\nyrs &lt;- c(2005:2019, 2021, 2022)\nnames(yrs) &lt;- yrs\n\n# Get variables for ALL years\nvACS1 &lt;- map_dfr(yrs, ~ {\n  load_variables(.x, \"acs1\") %&gt;% \n  filter(str_detect(name, \"^[BC]25\"))\n}, .id = \"yr\")\n\nNarrow for housing variables and clean up.\n\n# Get the top level variables\nhsg_top &lt;- vACS1 %&gt;% \n  filter(str_detect(name, \"_001$\"),           #' only top-level variables\n         !str_detect(name, \"[:alpha:]_\"),     #' omit race variables\n         !str_detect(label, \"Estimate!!Aggregate\") #' omit aggregates, medians, etc.\n  ) %&gt;% \n  mutate(across(c(label, concept), \n                ~ str_replace_all(.x, c(\"\\\\b20\\\\d{2}\\\\b\" = \"ACSYEAR\",\n                                        \"INCOME THE PAST 12 MONTHS\" = \"INCOME IN THE PAST 12 MONTHS\")\n                                  ) %&gt;% \n                  str_to_title())) %&gt;% \n  select(-label)\n\nFind the first and last year the variable appeared. Note that the “concept” column is currently broken for 2010 & 2011 ACS1, and a couple variables changed over the years, so group by name AND concept.\n\nmin_yr &lt;- hsg_top %&gt;% \n  filter(!is.na(concept)) %&gt;% \n  group_by(name, concept) %&gt;% \n  slice_min(yr) %&gt;% \n  mutate(nm = \"min\")\n\nmax_yr &lt;- hsg_top %&gt;% \n  filter(!is.na(concept)) %&gt;% \n  group_by(name, concept) %&gt;% \n  slice_max(yr) %&gt;% \n  mutate(nm = \"max\")\n\n#' Join together and combine the first and last year\nhsg_yrs &lt;- rbind(min_yr, max_yr) %&gt;% \n  pivot_wider(names_from = nm, values_from = yr) %&gt;% \n  mutate(years = case_when(\n    min != max & min != 2012 ~ paste0(\"(\", min, \"-\", max, \")\"),\n    min != max & min == 2012 ~ paste0(\"(2010-\", max, \")\"),\n    TRUE ~ paste0(\"(\", min, \")\")\n  )) %&gt;% \n  arrange(name, min, max) %&gt;% \n  select(-c(min, max)) %&gt;% \n  distinct()\n\nFormat for the command line.\n\nhsg_vs &lt;- hsg_yrs %&gt;% \n  mutate(concept = str_replace_all(concept, \"-(?=[:alpha:])\", \" \") %&gt;% \n         str_remove_all(\"[:punct:]\") %&gt;% \n         str_replace_all(\" By \", \"/\"),\n         name = str_remove(name, \"_001\")\n         ) %&gt;% \n  unite(col = \"name\", name, years, sep = \"-\", na.rm = TRUE) %&gt;% \n  unite(col = \"fileStr\", concept, name, sep = \"/\", na.rm = TRUE) %&gt;% \n  mutate(fileStr = str_replace_all(fileStr, \"\\\\s\", \"-\"),\n         fileStr = str_replace_all(fileStr, \"-{2,}\", \"-\"))\n\nv_ACS1 &lt;- hsg_vs$fileStr\n\nwrite_lines(v_ACS1, file = \"~/Documents/vACS1.txt\")\n\nTo make the tree, we will convert this text file to a directory structure."
  },
  {
    "objectID": "census/variables.html#command-line",
    "href": "census/variables.html#command-line",
    "title": "ACS Variables",
    "section": "Command Line",
    "text": "Command Line\nIn the terminal, make a new directory to house your Census tree.\nmkdir ~/Documents/census\ncd Documents/census\nConvert the text file to a file directory using the following code.\nxargs -I {} mkdir -p \"{}\" &lt; \"../vACS1.txt\"\nFinally, create a tree of the file directory. Note: requires the tree package.\ntree\nThe output is the tree above."
  },
  {
    "objectID": "census/variables.html#footnotes",
    "href": "census/variables.html#footnotes",
    "title": "ACS Variables",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe tidycensus package was created by Kyle Walker, and he also published an amazingly helpful book Analyzing US Census Data, which I strongly recommend for anyone interested in accessing Census data with R.↩︎\nThe Census Bureau releases information on which variables have changed from the previous year.↩︎"
  },
  {
    "objectID": "census/surveys.html",
    "href": "census/surveys.html",
    "title": "Surveys & Programs",
    "section": "",
    "text": "The Census conducts over 130 surveys and programs each year, but a handful are especially useful for housing research. In this post I will compare three datasets that provide information on population and housing units: the American Community Survey (1-year & 5-year) and the Population Estimates Program.\n\n\nWhile all Americans are likely aware of the decennial Census, the American Community Survey (ACS) has become the “premier source for detailed population and housing information about our nation.”(US Census Bureau 2021) Unlike the decennial Census, which attempts to count every person living in the US, ACS estimates are derived from an annual sample of about 3.5 million addresses. There are nearly 50 subjects included in the ACS, with sub-tables available for each subject, leading to tens of thousands of detailed variables.\nEvery year, the Census Bureau releases a 1-year and a 5-year version of the ACS. The 1-year estimates are collected over a 12-month period for areas with at least 65,000 people, and have a higher margin of error; 5-year estimates are for areas with fewer than 65,000 people over a period of 60 months, and have a lower margin of error.(US Census Bureau 2020) ACS 5-year estimates should be labeled to show all years data was collected, not just the midpoint or year the dataset was released (for example “2015-2019 ACS 5-Year” is correct but not “2017 ACS 5-Year” or “2019 ACS 5-Year”).\nWhen comparing data over time, the Census Bureau recommends using 1-year data, or to compare 5-year estimates that do not overlap, such as 2009-2013 estimates and 2014-2018 estimates. Five-year estimates are more precise, but they are also less likely to show year-to-year fluctuations or recent trends.(US Census Bureau 2020) Users should also research how ACS questions have changed over time, and whether certain variables/time frames should or should not be compared.\nLastly, the 2020 Census ran into significant data collection problems due to COVID. As such, the Census Bureau will not release its standard 2020 ACS 1-year estimates, but experimental estimates. The 5-year ACS will still be released as normal.\n\n\n\nThe ACS was designed to provide information about the characteristics of a population, rather than basic counts of population and housing.(US Census Bureau 2020) The Census Bureau recommends that this data should instead be collected from the Population Estimates Program (PEP), available for states, metro/micro areas, counties, and places.\nRather than being based on a survey, the PEP estimates population by using the most recent decennial Census, combined with administrative records on birth, death, and migration rates.(Walker 2021) Housing unit estimates are determined by new residential construction, new mobile homes, and the estimated number of housing units lost.(US Census Bureau 2019)\n\n\n\nCensus methodology to estimate housing units for the PEP. (Census Bureau)\n\n\nPEP estimates are used as controls for other surveys including the ACS, American Housing Survey, and Housing Vacancy Survey."
  },
  {
    "objectID": "census/surveys.html#american-community-survey",
    "href": "census/surveys.html#american-community-survey",
    "title": "Surveys & Programs",
    "section": "",
    "text": "While all Americans are likely aware of the decennial Census, the American Community Survey (ACS) has become the “premier source for detailed population and housing information about our nation.”(US Census Bureau 2021) Unlike the decennial Census, which attempts to count every person living in the US, ACS estimates are derived from an annual sample of about 3.5 million addresses. There are nearly 50 subjects included in the ACS, with sub-tables available for each subject, leading to tens of thousands of detailed variables.\nEvery year, the Census Bureau releases a 1-year and a 5-year version of the ACS. The 1-year estimates are collected over a 12-month period for areas with at least 65,000 people, and have a higher margin of error; 5-year estimates are for areas with fewer than 65,000 people over a period of 60 months, and have a lower margin of error.(US Census Bureau 2020) ACS 5-year estimates should be labeled to show all years data was collected, not just the midpoint or year the dataset was released (for example “2015-2019 ACS 5-Year” is correct but not “2017 ACS 5-Year” or “2019 ACS 5-Year”).\nWhen comparing data over time, the Census Bureau recommends using 1-year data, or to compare 5-year estimates that do not overlap, such as 2009-2013 estimates and 2014-2018 estimates. Five-year estimates are more precise, but they are also less likely to show year-to-year fluctuations or recent trends.(US Census Bureau 2020) Users should also research how ACS questions have changed over time, and whether certain variables/time frames should or should not be compared.\nLastly, the 2020 Census ran into significant data collection problems due to COVID. As such, the Census Bureau will not release its standard 2020 ACS 1-year estimates, but experimental estimates. The 5-year ACS will still be released as normal."
  },
  {
    "objectID": "census/surveys.html#population-estimates-program",
    "href": "census/surveys.html#population-estimates-program",
    "title": "Surveys & Programs",
    "section": "",
    "text": "The ACS was designed to provide information about the characteristics of a population, rather than basic counts of population and housing.(US Census Bureau 2020) The Census Bureau recommends that this data should instead be collected from the Population Estimates Program (PEP), available for states, metro/micro areas, counties, and places.\nRather than being based on a survey, the PEP estimates population by using the most recent decennial Census, combined with administrative records on birth, death, and migration rates.(Walker 2021) Housing unit estimates are determined by new residential construction, new mobile homes, and the estimated number of housing units lost.(US Census Bureau 2019)\n\n\n\nCensus methodology to estimate housing units for the PEP. (Census Bureau)\n\n\nPEP estimates are used as controls for other surveys including the ACS, American Housing Survey, and Housing Vacancy Survey."
  },
  {
    "objectID": "census/surveys.html#footnotes",
    "href": "census/surveys.html#footnotes",
    "title": "Surveys & Programs",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFor more information on when to use the ACS vs the PEP, see the Census webinar/presentation/transcript: Comparing the American Community Survey and the Population Estimates Program.↩︎\nThe regular 1-year ACS for 2020 was not released. Due to low response rates, the Census Bureau instead released a set of experimental estimates for the 2020 1-year ACS. These estimates can be downloaded here.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sarah Johnson",
    "section": "",
    "text": "Hello 🤠\nI’m the Business Service Analyst at the Shelby County Department of Housing. I received my bachelor’s in economics and master’s in urban planning from the University of Memphis. I’m passionate about guaranteeing people access to healthy, safe, affordable housing."
  }
]